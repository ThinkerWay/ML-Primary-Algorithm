应用背景：
1 它会为你提供一个缩短编程时间的工具。EP：假设想编写一个程序来纠正拼写错误。我可以通过大量示例和经验法则（例如，I位于E之前，但出现在C之后时例外），取得一定的进展，然后经过数周的努力，编写出一个合理的程序。或者，我也可以使用现成的机器学习工具，只需向其提供一些样本，即可在很短的时间内获得一个更可靠的程序。
2 借助机器学习，可以自定义产品，使其更适合特定的用户群体。假设我手动编写了一个英文拼写纠正程序，这个程序很成功，因此我打算针对100种最常用语言提供相应的版本。这样一来，每种语言版本几乎都需要从头开始，这将需要付出数年的努力。但如果我使用机器学习技术构建该程序，然后迁移到其他语言，基本上就相当于，我只需收集该特定语言的数据，并将这些数据提供给完全一样的机器学习模型即可。
3 借助机器学习，帮助编程人员解决不知道如何用人工方法解决的问题。作为人类，我可以认出朋友的面孔，理解他们所说的话。但所有这些都是在潜意识下完成的，如果让我编写一个程序来做这些事，我会完全不知所措。但是，机器学习算法对此却很擅长，我不需要告诉算法应该怎么做，只需向其展示大量样本，问题就可以迎刃而解。
4 可以改变思考问题的方式（哲学），像科学家一样思考。扩展视野，打开没有这项能力便无法探索的新世界的大门。所以，不妨享受这段旅程，愉快地探索其中的奥秘。

一、机器学习的概念
有监督：是从标记（lablel）或者说标注的训练数据（或者说样本）中来进行腿短的机器学习任务。如分类、回归。
无监督：在未标记的数据中，试图找到隐藏的结构。如聚类、密度估计。
泛化能力：在机器学习方法中，泛化能力通俗来讲就是指学习到的模型对未知数据的预测能力。在实际情况中，我们通常通过测试误差来评价学习方法的泛化能力。
过拟合欠拟合：在训练机器学习模型或者深度学习神经网络中经常会遇到过拟合与欠拟合的问题
过拟合是指训练数据上能够获得比其他假设更好的拟合， 但是在训练数据外的数据集上却不能很好地拟合数据，此时认为这个假设出现了过拟合的现象。出现这种现象的主要原因是训练数据中存在噪音或者训练数据太少。 
欠拟合就是指我们训练的模型要求过于宽泛无法达到我们预期的效果正确率低表达能力差。 
交叉验证：交叉验证是在机器学习建立模型和验证模型参数时常用的办法。交叉验证，顾名思义，就是重复的使用数据，把得到的样本数据进行切分，组合为不同的训练集和测试集，用训练集来训练模型，用测试集来评估模型预测的好坏。在此基础上可以得到多组不同的训练集和测试集，某次训练集中的某样本在下次可能成为测试集中的样本，即所谓“交叉”。　
二、线性回归的原理
我们使用线性回归是在这堆数据所在的N维空间中找到一条线来描述这些数据的规律，因此才叫线性回归。这个过程称为拟合，这条线成为拟合线。
三、线性回归损失函数、代价函数、目标函数
损失函数（Loss Function ）是定义在单个样本上的，算的是一个样本的误差。
代价函数（Cost Function ）是定义在整个训练集上的，是所有样本误差的平均，也就是损失函数的平均。
目标函数（Object Function）定义为：最终需要优化的函数。等于经验风险+结构风险（也就是Cost Function + 正则化项）。
四、优化方法
梯度下降法、牛顿法、拟牛顿法
五、线性回归的评估指标
评价线性回归的指标有四种，均方误差（Mean Squared Error）、均方根误差（Root Mean Squared Error）、平均绝对值误差（Mean Absolute Error）以及R Squared方法。 sklearnz中使用的，也是大家推荐的方法是R Squared方法。
